version: '3.7'

services:
    php:
        volumes:
            - ./api:/srv/api:rw,cached
            # Link local bundle into container, composer.json can be used to configure this as a repository to use for the bundle (or not)
#            - /Volumes/Samsung_T5/GitHub/_ComponentsWebApp/ApiComponentBundle:/Volumes/Samsung_T5/GitHub/_ComponentsWebApp/ApiComponentBundle:ro,cached
        env_file:
            - ./shared/.env
            - ./api/.env
        environment:
            ENABLE_XDEBUG: ${ENABLE_XDEBUG}

    nginx:
        volumes:
            - ./api/public:/srv/api/public:ro
            - ./api/_docker/nginx/conf.d/custom.conf:/etc/nginx/conf.d/custom.conf:ro,cached
        ports:
            - "8080:80"
        env_file:
            - ./shared/.env

    varnish:
        volumes:
            - ./api/_docker/varnish/conf:/usr/local/etc/varnish:ro
            - ./api/_docker/varnish/errors:/var/www/errors:ro
        ports:
            - "8081:80"

    db:
        volumes:
            - mysql-data:/var/lib/mysql:rw,delegated
#            - ./mysql/my-no-aio.cnf:/etc/mysql/conf.d/my-no-aio.cnf
        ports:
            - "4306:3306"
        env_file:
            - ./shared/.env

    app:
        ports:
            - "80:3000"
        volumes:
            - ./app:/usr/src/app:rw,delegated
            # Uncomment this line to link in local node packages (comment during yarn upgrades)
#            - /Volumes/Samsung_T5/GitHub/_ComponentsWebApp/CWAModules/packages:/usr/src/app/node_modules/@cwamodules:ro,cached
        env_file:
            - ./shared/.env
            - ./app/_docker/.env.local

volumes:
    mysql-data:
