version: '3.7'

x-cache:
  &cache
    cache_from:
        - ${CONTAINER_REGISTRY_BASE}/php
        - ${CONTAINER_REGISTRY_BASE}/nginx
        - ${CONTAINER_REGISTRY_BASE}/varnish
        - ${CONTAINER_REGISTRY_BASE}/app

services:
    php:
        image: ${CONTAINER_REGISTRY_BASE}/php
        build:
            context: ./api
            target: sbwa_php
            <<: *cache
        depends_on:
            - db
        networks:
            - blackfire
            - smtp
            - api
        volumes:
            - ./api:/srv/api:rw,cached
            - ./api/var/uploads:/srv/api/var/uploads:rw,cached
            - /Volumes/Samsung_T5/GitHub/_ComponentsWebApp/ApiComponentBundle:/Volumes/Samsung_T5/GitHub/_ComponentsWebApp/ApiComponentBundle:ro,cached
        env_file:
            - ./shared/.env.local
            - ./api/.env.local

    nginx:
        image: ${CONTAINER_REGISTRY_BASE}/nginx
        build:
            context: ./api
            target: sbwa_nginx
            <<: *cache
        depends_on:
            - php
        networks:
            - api
        volumes:
            - ./api/public:/srv/api/public:ro
        ports:
            - "8080:80"
        env_file:
            - ./shared/.env.local

    varnish:
        image: ${CONTAINER_REGISTRY_BASE}/varnish
        build:
            context: ./api
            target: sbwa_varnish
            <<: *cache
        depends_on:
            - nginx
        tmpfs:
            - /usr/local/var/varnish:exec
        networks:
            - api
            - app
        volumes:
            - ./api/_docker/varnish/errors:/var/www/errors:ro
        ports:
            - "8081:80"
        env_file:
            - ./shared/.env.local

    smtp_relay:
        image: namshi/smtp
        networks:
            - smtp

    blackfire:
        image: blackfire/blackfire
        env_file:
            - ./api/_docker/blackfire/.env.local
        networks:
            - blackfire

    db:
        image: postgres:9-alpine
        environment:
            - POSTGRES_DB=api
            - POSTGRES_USER=api-platform
            # You should definitely change the password in production
            - POSTGRES_PASSWORD=!ChangeMe!
        networks:
            - api
            - app
        volumes:
            - sql-data:/var/lib/postgresql/data:rw,delegated
        ports:
            - "5432:5432"

    app:
        image: ${CONTAINER_REGISTRY_BASE}/app
        build:
            context: ./app
            target: sbwa_app
            <<: *cache
        depends_on:
            - db
        networks:
            - app
        ports:
            - "80:3000"
        volumes:
            - ./app:/usr/src/app:rw,cached
            #- /Volumes/Samsung_T5/GitHub/_ComponentsWebApp/CWAModules/packages:/usr/src/app/node_modules/@cwamodules:ro,cached
        env_file:
            - ./shared/.env.local
            - ./app/_docker/.env.local

    admin:
        build:
            context: ./admin
            target: api_platform_admin_development
            cache_from:
                - ${ADMIN_IMAGE:-quay.io/api-platform/admin}
        image: ${ADMIN_IMAGE:-quay.io/api-platform/admin}
        depends_on:
            - dev-tls
        volumes:
            - ./admin:/usr/src/admin:rw,cached
            - dev-certs:/usr/src/admin/node_modules/webpack-dev-server/ssl:ro
        ports:
            -   target: 3000
                published: 444
                protocol: tcp
        env_file:
            - ./admin/.env.local

    dev-tls:
        build:
            context: ./docker/dev-tls
        volumes:
            - dev-certs:/certs:rw

networks:
    app:
    api:
    blackfire:
    smtp:

volumes:
    sql-data: ~
    dev-certs: ~
